name: Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - '**/*.md'
      - 'src/**/*.py'  # Capture docstrings changes
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - '**/*.md'
      - 'src/**/*.py'  # Capture docstrings changes
  workflow_dispatch:

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install mkdocs mkdocs-material "mkdocstrings[python]" mkdocs-gen-files mkdocs-literate-nav mkdocs-section-index
    
    - name: Create mkdocs.yml if it doesn't exist
      run: |
        if [ ! -f "mkdocs.yml" ]; then
          cat > mkdocs.yml << 'EOF'
        site_name: HIPO Documentation
        site_description: Documentation for the HIPO Multi-Cloud Kubernetes ML Platform
        site_url: https://yourusername.github.io/hipo/
        
        repo_name: yourusername/hipo
        repo_url: https://github.com/yourusername/hipo
        
        theme:
          name: material
          palette:
            primary: indigo
            accent: indigo
          features:
            - navigation.sections
            - navigation.top
            - search.highlight
            - search.share
        
        markdown_extensions:
          - pymdownx.highlight
          - pymdownx.superfences
          - pymdownx.inlinehilite
          - pymdownx.tabbed
          - pymdownx.critic
          - pymdownx.tasklist:
              custom_checkbox: true
          - pymdownx.emoji:
              emoji_index: !!python/name:material.extensions.emoji.twemoji
              emoji_generator: !!python/name:material.extensions.emoji.to_svg
          - admonition
          - toc:
              permalink: true
        
        plugins:
          - search
          - mkdocstrings:
              default_handler: python
              handlers:
                python:
                  rendering:
                    show_source: true
                    show_root_heading: true
          - gen-files:
              scripts:
                - docs/gen_ref_pages.py
          - literate-nav:
              nav_file: SUMMARY.md
          - section-index
        
        nav:
          - Home: index.md
          - Getting Started: getting-started.md
          - User Guide:
            - Overview: guide/overview.md
            - Installation: guide/installation.md
            - Configuration: guide/configuration.md
            - Model Training: guide/model-training.md
            - Model Serving: guide/model-serving.md
            - Kubernetes Integration: guide/kubernetes.md
          - Multi-Cloud:
            - Overview: multi-cloud/overview.md
            - AWS: multi-cloud/aws.md
            - GCP: multi-cloud/gcp.md
          - API Reference: reference/
          - Contributing: contributing.md
        EOF
        fi
    
    - name: Create docs directory structure if it doesn't exist
      run: |
        mkdir -p docs/{guide,multi-cloud,reference}
        
        # Create index page if it doesn't exist
        if [ ! -f "docs/index.md" ]; then
          echo "# HIPO - Multi-Cloud Kubernetes ML Platform" > docs/index.md
          echo "" >> docs/index.md
          echo "A modular and scalable infrastructure for deploying machine learning and LLM models across multiple cloud providers." >> docs/index.md
          echo "" >> docs/index.md
          cat README.md | tail -n +3 >> docs/index.md
        fi
        
        # Create auto-generation script for API reference
        cat > docs/gen_ref_pages.py << 'EOF'
        """Generate the code reference pages."""
        
        from pathlib import Path
        
        import mkdocs_gen_files
        
        nav = mkdocs_gen_files.Nav()
        
        src_dir = Path("src")
        for path in sorted(src_dir.glob("**/*.py")):
            doc_path = Path("reference", path.relative_to(src_dir)).with_suffix(".md")
            full_doc_path = Path("docs", doc_path)
        
            parts = tuple(path.relative_to(src_dir).with_suffix("").parts)
            if parts[-1] == "__init__":
                parts = parts[:-1]
                doc_path = doc_path.with_name("index.md")
                full_doc_path = full_doc_path.with_name("index.md")
            elif parts[-1] == "__main__":
                continue
        
            nav[parts] = doc_path.as_posix()
        
            with mkdocs_gen_files.open(doc_path, "w") as fd:
                fd.write(f"# `{parts[-1]}`\n\n")
                if len(parts) > 1:
                    fd.write(f"Module: `src.{'.'.join(parts[:-1])}.{parts[-1]}`\n\n")
                else:
                    fd.write(f"Module: `src.{parts[-1]}`\n\n")
                fd.write("```python\n")
                fd.write(f"from src.{'.'.join(parts)} import *\n")
                fd.write("```\n\n")
                fd.write("## API Documentation\n\n")
                fd.write(f"::: src.{'.'.join(parts)}")
        
            mkdocs_gen_files.set_edit_path(doc_path, Path("../") / path)
        
        with mkdocs_gen_files.open("reference/SUMMARY.md", "w") as nav_file:
            nav_file.write(nav.build_literate_nav())
        EOF
    
    - name: Build documentation
      run: mkdocs build
    
    - name: Upload documentation artifact
      uses: actions/upload-artifact@v4
      with:
        name: documentation-site
        path: site/
        retention-days: 7

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download documentation site
      uses: actions/download-artifact@v4
      with:
        name: documentation-site
        path: site
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site
        force_orphan: true
        full_commit_message: 'docs: update documentation site [skip ci]'
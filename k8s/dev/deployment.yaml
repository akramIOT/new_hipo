apiVersion: apps/v1
kind: Deployment
metadata:
  name: hipo-api
  namespace: hipo
  labels:
    app: hipo
    component: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hipo
      component: api
  template:
    metadata:
      labels:
        app: hipo
        component: api
    spec:
      containers:
      - name: hipo-api
        image: akramsheriff/hipo:latest
        imagePullPolicy: Always
        args: ["serve"]
        ports:
        - containerPort: 5000
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        env:
        - name: ENVIRONMENT
          value: "dev"
        - name: LOG_LEVEL
          value: "INFO"
        - name: CLOUD_PROVIDERS
          value: "aws,gcp"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: secrets-volume
          mountPath: /app/secrets
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: hipo-config
      - name: secrets-volume
        secret:
          secretName: hipo-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hipo-ui
  namespace: hipo
  labels:
    app: hipo
    component: ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hipo
      component: ui
  template:
    metadata:
      labels:
        app: hipo
        component: ui
    spec:
      containers:
      - name: hipo-ui
        image: akramsheriff/hipo:latest
        imagePullPolicy: Always
        args: ["ui"]
        ports:
        - containerPort: 8501
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "2Gi"
        env:
        - name: ENVIRONMENT
          value: "dev"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        livenessProbe:
          httpGet:
            path: /
            port: 8501
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: config-volume
        configMap:
          name: hipo-config
---
apiVersion: v1
kind: Service
metadata:
  name: hipo-api
  namespace: hipo
spec:
  selector:
    app: hipo
    component: api
  ports:
  - port: 5000
    targetPort: 5000
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: hipo-ui
  namespace: hipo
spec:
  selector:
    app: hipo
    component: ui
  ports:
  - port: 80
    targetPort: 8501
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hipo-ingress
  namespace: hipo
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: hipo-dev.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: hipo-api
            port:
              number: 5000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hipo-ui
            port:
              number: 80